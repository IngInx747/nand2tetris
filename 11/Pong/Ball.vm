// ========== Ball ==========
// ===== Ball.new =====
function Ball.new 0
push constant 15
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 10
push argument 3
push constant 6
sub
pop this 11
push argument 4
pop this 12
push argument 5
push constant 6
sub
pop this 13
push constant 0
pop this 14
push pointer 0
call Ball.show 1
pop temp 0
push pointer 0
return
// ----- Ball.new -----
// ===== Ball.dispose =====
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
// ----- Ball.dispose -----
// ===== Ball.show =====
function Ball.show 0
push argument 0
pop pointer 0
push constant 1
neg
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
// ----- Ball.show -----
// ===== Ball.hide =====
function Ball.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
// ----- Ball.hide -----
// ===== Ball.draw =====
function Ball.draw 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 0
push constant 5
add
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
// ----- Ball.draw -----
// ===== Ball.getLeft =====
function Ball.getLeft 0
push argument 0
pop pointer 0
push this 0
return
// ----- Ball.getLeft -----
// ===== Ball.getRight =====
function Ball.getRight 0
push argument 0
pop pointer 0
push this 0
push constant 5
add
return
// ----- Ball.getRight -----
// ===== Ball.setDestination =====
function Ball.setDestination 3
push argument 0
pop pointer 0
push argument 1
push this 0
sub
pop this 2
push argument 2
push this 1
sub
pop this 3
push this 2
call Math.abs 1
pop local 0
push this 3
call Math.abs 1
pop local 1
push local 0
push local 1
lt
pop this 7
push this 7
not
if-goto Ball.setDestination.IF.TRUE.0
push local 0
pop local 2
push local 1
pop local 0
push local 2
pop local 1
push this 1
push argument 2
lt
pop this 8
push this 0
push argument 1
lt
pop this 9
goto Ball.setDestination.IF.FALSE.0
label Ball.setDestination.IF.TRUE.0
push this 0
push argument 1
lt
pop this 8
push this 1
push argument 2
lt
pop this 9
label Ball.setDestination.IF.FALSE.0
push constant 2
push local 1
call Math.multiply 2
push local 0
sub
pop this 4
push constant 2
push local 1
call Math.multiply 2
pop this 5
push constant 2
push local 1
push local 0
sub
call Math.multiply 2
pop this 6
push constant 0
return
// ----- Ball.setDestination -----
// ===== Ball.move =====
function Ball.move 0
push argument 0
pop pointer 0
push pointer 0
call Ball.hide 1
pop temp 0
push this 4
push constant 0
lt
not
if-goto Ball.move.IF.TRUE.0
push this 4
push this 5
add
pop this 4
goto Ball.move.IF.FALSE.0
label Ball.move.IF.TRUE.0
push this 4
push this 6
add
pop this 4
push this 9
not
if-goto Ball.move.IF.TRUE.1
push this 7
not
if-goto Ball.move.IF.TRUE.2
push this 0
push constant 4
add
pop this 0
goto Ball.move.IF.FALSE.2
label Ball.move.IF.TRUE.2
push this 1
push constant 4
add
pop this 1
label Ball.move.IF.FALSE.2
goto Ball.move.IF.FALSE.1
label Ball.move.IF.TRUE.1
push this 7
not
if-goto Ball.move.IF.TRUE.3
push this 0
push constant 4
sub
pop this 0
goto Ball.move.IF.FALSE.3
label Ball.move.IF.TRUE.3
push this 1
push constant 4
sub
pop this 1
label Ball.move.IF.FALSE.3
label Ball.move.IF.FALSE.1
label Ball.move.IF.FALSE.0
push this 8
not
if-goto Ball.move.IF.TRUE.4
push this 7
not
if-goto Ball.move.IF.TRUE.5
push this 1
push constant 4
add
pop this 1
goto Ball.move.IF.FALSE.5
label Ball.move.IF.TRUE.5
push this 0
push constant 4
add
pop this 0
label Ball.move.IF.FALSE.5
goto Ball.move.IF.FALSE.4
label Ball.move.IF.TRUE.4
push this 7
not
if-goto Ball.move.IF.TRUE.6
push this 1
push constant 4
sub
pop this 1
goto Ball.move.IF.FALSE.6
label Ball.move.IF.TRUE.6
push this 0
push constant 4
sub
pop this 0
label Ball.move.IF.FALSE.6
label Ball.move.IF.FALSE.4
push this 0
push this 10
gt
not
not
if-goto Ball.move.IF.TRUE.7
push constant 1
pop this 14
push this 10
pop this 0
label Ball.move.IF.TRUE.7
push this 0
push this 11
lt
not
not
if-goto Ball.move.IF.TRUE.8
push constant 2
pop this 14
push this 11
pop this 0
label Ball.move.IF.TRUE.8
push this 1
push this 12
gt
not
not
if-goto Ball.move.IF.TRUE.9
push constant 3
pop this 14
push this 12
pop this 1
label Ball.move.IF.TRUE.9
push this 1
push this 13
lt
not
not
if-goto Ball.move.IF.TRUE.10
push constant 4
pop this 14
push this 13
pop this 1
label Ball.move.IF.TRUE.10
push pointer 0
call Ball.show 1
pop temp 0
push this 14
return
// ----- Ball.move -----
// ===== Ball.bounce =====
function Ball.bounce 5
push argument 0
pop pointer 0
push this 2
push constant 10
call Math.divide 2
pop local 2
push this 3
push constant 10
call Math.divide 2
pop local 3
push argument 1
push constant 0
eq
not
if-goto Ball.bounce.IF.TRUE.0
push constant 10
pop local 4
goto Ball.bounce.IF.FALSE.0
label Ball.bounce.IF.TRUE.0
push this 2
push constant 0
lt
not
push argument 1
push constant 1
eq
and
push this 2
push constant 0
lt
push argument 1
push constant 1
neg
eq
and
or
not
if-goto Ball.bounce.IF.TRUE.1
push constant 20
pop local 4
goto Ball.bounce.IF.FALSE.1
label Ball.bounce.IF.TRUE.1
push constant 5
pop local 4
label Ball.bounce.IF.FALSE.1
label Ball.bounce.IF.FALSE.0
push this 14
push constant 1
eq
not
if-goto Ball.bounce.IF.TRUE.2
push constant 506
pop local 0
push local 3
push constant 50
neg
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto Ball.bounce.IF.FALSE.2
label Ball.bounce.IF.TRUE.2
push this 14
push constant 2
eq
not
if-goto Ball.bounce.IF.TRUE.3
push constant 0
pop local 0
push local 3
push constant 50
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto Ball.bounce.IF.FALSE.3
label Ball.bounce.IF.TRUE.3
push this 14
push constant 3
eq
not
if-goto Ball.bounce.IF.TRUE.4
push constant 250
pop local 1
push local 2
push constant 25
neg
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
goto Ball.bounce.IF.FALSE.4
label Ball.bounce.IF.TRUE.4
push constant 0
pop local 1
push local 2
push constant 25
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
label Ball.bounce.IF.FALSE.4
label Ball.bounce.IF.FALSE.3
label Ball.bounce.IF.FALSE.2
push pointer 0
push local 0
push local 1
call Ball.setDestination 3
pop temp 0
push constant 0
return
// ----- Ball.bounce -----
// ---------- Ball ----------
