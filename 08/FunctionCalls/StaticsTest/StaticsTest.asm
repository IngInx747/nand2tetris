@256
D=A
@SP
M=D
@RETURN_Sys.init
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(RETURN_Sys.init)
(Sys.init)
// End of : function Sys.init 0
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
// End of : push constant 6
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
// End of : push constant 8
@RETURN_Class1.set_0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.set
0;JMP
(RETURN_Class1.set_0)
// End of : call Class1.set 2
@0
D=A
@R5
D=D+A
@R15
M=D
@SP
AM=M-1
D=M
@R15
A=M
M=D
// End of : pop temp 0
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
// End of : push constant 23
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
// End of : push constant 15
@RETURN_Class2.set_1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.set
0;JMP
(RETURN_Class2.set_1)
// End of : call Class2.set 2
@0
D=A
@R5
D=D+A
@R15
M=D
@SP
AM=M-1
D=M
@R15
A=M
M=D
// End of : pop temp 0
@RETURN_Class1.get_2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.get
0;JMP
(RETURN_Class1.get_2)
// End of : call Class1.get 0
@RETURN_Class2.get_3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.get
0;JMP
(RETURN_Class2.get_3)
// End of : call Class2.get 0
(WHILE)
@WHILE
0;JMP
// End of : goto WHILE
(Class1.set)
// End of : function Class1.set 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// End of : push argument 0
@Class1.vm.0
D=A
@R15
M=D
@SP
AM=M-1
D=M
@R15
A=M
M=D
// End of : pop static 0
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// End of : push argument 1
@Class1.vm.1
D=A
@R15
M=D
@SP
AM=M-1
D=M
@R15
A=M
M=D
// End of : pop static 1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// End of : push constant 0
@LCL
D=M
@R13
M=D
@5
AD=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
// End of : return
(Class1.get)
// End of : function Class1.get 0
@Class1.vm.0
D=M
@SP
A=M
M=D
@SP
M=M+1
// End of : push static 0
@Class1.vm.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// End of : push static 1
@SP
AM=M-1
D=M
@SP
AM=M-1
M=M-D
@SP
M=M+1
// End of : sub
@LCL
D=M
@R13
M=D
@5
AD=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
// End of : return
(Class2.set)
// End of : function Class2.set 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// End of : push argument 0
@Class2.vm.0
D=A
@R15
M=D
@SP
AM=M-1
D=M
@R15
A=M
M=D
// End of : pop static 0
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// End of : push argument 1
@Class2.vm.1
D=A
@R15
M=D
@SP
AM=M-1
D=M
@R15
A=M
M=D
// End of : pop static 1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// End of : push constant 0
@LCL
D=M
@R13
M=D
@5
AD=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
// End of : return
(Class2.get)
// End of : function Class2.get 0
@Class2.vm.0
D=M
@SP
A=M
M=D
@SP
M=M+1
// End of : push static 0
@Class2.vm.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// End of : push static 1
@SP
AM=M-1
D=M
@SP
AM=M-1
M=M-D
@SP
M=M+1
// End of : sub
@LCL
D=M
@R13
M=D
@5
AD=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
// End of : return
(END)
@END
0;JMP
