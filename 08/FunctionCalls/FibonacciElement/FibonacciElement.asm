@256
D=A
@SP
M=D
@RETURN_Sys.init
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(RETURN_Sys.init)
(Sys.init)
// End of : function Sys.init 0
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
// End of : push constant 4
@RETURN_Main.fibonacci_0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(RETURN_Main.fibonacci_0)
// End of : call Main.fibonacci 1
(WHILE)
@WHILE
0;JMP
// End of : goto WHILE
(Main.fibonacci)
// End of : function Main.fibonacci 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// End of : push argument 0
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// End of : push constant 2
@SP
AM=M-1
D=M
A=A-1
D=M-D
@FALSE1
D;JGE
@SP
A=M-1
M=-1
@TRUE1
0;JMP
(FALSE1)
@SP
A=M-1
M=0
(TRUE1)
// End of : lt
@SP
AM=M-1
D=M
@IF_TRUE
D;JNE
// End of : if-goto IF_TRUE
@IF_FALSE
0;JMP
// End of : goto IF_FALSE
(IF_TRUE)
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// End of : push argument 0
@LCL
D=M
@R13
M=D
@5
AD=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
// End of : return
(IF_FALSE)
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// End of : push argument 0
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// End of : push constant 2
@SP
AM=M-1
D=M
@SP
AM=M-1
M=M-D
@SP
M=M+1
// End of : sub
@RETURN_Main.fibonacci_2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(RETURN_Main.fibonacci_2)
// End of : call Main.fibonacci 1
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// End of : push argument 0
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// End of : push constant 1
@SP
AM=M-1
D=M
@SP
AM=M-1
M=M-D
@SP
M=M+1
// End of : sub
@RETURN_Main.fibonacci_3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(RETURN_Main.fibonacci_3)
// End of : call Main.fibonacci 1
@SP
AM=M-1
D=M
@SP
AM=M-1
M=D+M
@SP
M=M+1
// End of : add
@LCL
D=M
@R13
M=D
@5
AD=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
// End of : return
(END)
@END
0;JMP
